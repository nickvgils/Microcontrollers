
GccBoardProject1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000066  00800100  00000630  000006c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000630  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006a  00800166  00800166  0000072a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000072a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000075c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000798  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f67  00000000  00000000  00000850  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a2c  00000000  00000000  000017b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a7c  00000000  00000000  000021e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  00002c60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00007fee  00000000  00000000  00002ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000068a  00000000  00000000  0000aede  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  0000b568  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000024a1  00000000  00000000  0000b600  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	9d c1       	rjmp	.+826    	; 0x350 <__vector_5>
  16:	00 00       	nop
  18:	72 c1       	rjmp	.+740    	; 0x2fe <__vector_6>
  1a:	00 00       	nop
  1c:	47 c1       	rjmp	.+654    	; 0x2ac <__vector_7>
  1e:	00 00       	nop
  20:	1c c1       	rjmp	.+568    	; 0x25a <__vector_8>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e3       	ldi	r30, 0x30	; 48
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 36       	cpi	r26, 0x66	; 102
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e6       	ldi	r26, 0x66	; 102
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 3d       	cpi	r26, 0xD0	; 208
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	e2 d1       	rcall	.+964    	; 0x488 <main>
  c4:	b3 c2       	rjmp	.+1382   	; 0x62c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <lcd_command>:
 #include <util/delay.h>
 #include <avr/interrupt.h>

 void lcd_command(unsigned char dat)
 {
	PORTC = dat & 0xF0;     //0b1111 0000
  c8:	98 2f       	mov	r25, r24
  ca:	90 7f       	andi	r25, 0xF0	; 240
  cc:	95 bb       	out	0x15, r25	; 21
	PORTC = PORTC | 0x08;   //0b0000 1000
  ce:	ab 9a       	sbi	0x15, 3	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d0:	ef ec       	ldi	r30, 0xCF	; 207
  d2:	f7 e0       	ldi	r31, 0x07	; 7
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <lcd_command+0xc>
  d8:	00 c0       	rjmp	.+0      	; 0xda <lcd_command+0x12>
  da:	00 00       	nop

	_delay_ms( 1 );
	PORTC = 0x00;          //0b0000 0100
  dc:	15 ba       	out	0x15, r1	; 21

	PORTC = (dat & 0x0F) << 4;    //0b0000 1111
  de:	f0 e1       	ldi	r31, 0x10	; 16
  e0:	8f 9f       	mul	r24, r31
  e2:	c0 01       	movw	r24, r0
  e4:	11 24       	eor	r1, r1
  e6:	85 bb       	out	0x15, r24	; 21
	PORTC = PORTC | 0x08;         //0b0000 1000
  e8:	ab 9a       	sbi	0x15, 3	; 21
  ea:	8f ec       	ldi	r24, 0xCF	; 207
  ec:	97 e0       	ldi	r25, 0x07	; 7
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <lcd_command+0x26>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <lcd_command+0x2c>
  f4:	00 00       	nop

	_delay_ms(1);
	PORTC = 0x00;
  f6:	15 ba       	out	0x15, r1	; 21
  f8:	08 95       	ret

000000fa <lcd_writeChar>:
 }

  void lcd_writeChar(unsigned char dat)
  {
	  PORTC = dat & 0xF0;
  fa:	98 2f       	mov	r25, r24
  fc:	90 7f       	andi	r25, 0xF0	; 240
  fe:	95 bb       	out	0x15, r25	; 21
	  PORTC = PORTC | 0x0C;
 100:	95 b3       	in	r25, 0x15	; 21
 102:	9c 60       	ori	r25, 0x0C	; 12
 104:	95 bb       	out	0x15, r25	; 21
 106:	ef ec       	ldi	r30, 0xCF	; 207
 108:	f7 e0       	ldi	r31, 0x07	; 7
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <lcd_writeChar+0x10>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <lcd_writeChar+0x16>
 110:	00 00       	nop

	  _delay_ms( 1 );
	  PORTC = 0x00;
 112:	15 ba       	out	0x15, r1	; 21

	  PORTC = (dat & 0x0F) << 4;
 114:	f0 e1       	ldi	r31, 0x10	; 16
 116:	8f 9f       	mul	r24, r31
 118:	c0 01       	movw	r24, r0
 11a:	11 24       	eor	r1, r1
 11c:	85 bb       	out	0x15, r24	; 21
	  PORTC = PORTC | 0x0C;
 11e:	85 b3       	in	r24, 0x15	; 21
 120:	8c 60       	ori	r24, 0x0C	; 12
 122:	85 bb       	out	0x15, r24	; 21
 124:	8f ec       	ldi	r24, 0xCF	; 207
 126:	97 e0       	ldi	r25, 0x07	; 7
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <lcd_writeChar+0x2e>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <lcd_writeChar+0x34>
 12e:	00 00       	nop

	  _delay_ms(1);
	  PORTC = 0x00;
 130:	15 ba       	out	0x15, r1	; 21
 132:	08 95       	ret

00000134 <lcd_writeLine>:
  }

  void lcd_writeLine(char* ptrArray)
  {
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	ec 01       	movw	r28, r24
	lcd_command(0x02);
 13a:	82 e0       	ldi	r24, 0x02	; 2
 13c:	c5 df       	rcall	.-118    	; 0xc8 <lcd_command>
	int index = 0;
	while(ptrArray[index] != '\0')
 13e:	88 81       	ld	r24, Y
 140:	88 23       	and	r24, r24
 142:	29 f0       	breq	.+10     	; 0x14e <lcd_writeLine+0x1a>
	{
		lcd_writeChar(ptrArray[index]);
 144:	21 96       	adiw	r28, 0x01	; 1
 146:	d9 df       	rcall	.-78     	; 0xfa <lcd_writeChar>

  void lcd_writeLine(char* ptrArray)
  {
	lcd_command(0x02);
	int index = 0;
	while(ptrArray[index] != '\0')
 148:	89 91       	ld	r24, Y+
 14a:	81 11       	cpse	r24, r1
 14c:	fc cf       	rjmp	.-8      	; 0x146 <lcd_writeLine+0x12>
	{
		lcd_writeChar(ptrArray[index]);
		index++;
	}
  }
 14e:	df 91       	pop	r29
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <lcd_init>:
 void lcd_init(void)
 {
	//These steps are always neccesary for the lcd to start

	//return home
	lcd_command(0x02);
 154:	82 e0       	ldi	r24, 0x02	; 2
	lcd_command(0x28);
 156:	b8 df       	rcall	.-144    	; 0xc8 <lcd_command>
	lcd_command(0x0C);
 158:	88 e2       	ldi	r24, 0x28	; 40
	lcd_command(0x06);
 15a:	b6 df       	rcall	.-148    	; 0xc8 <lcd_command>
 15c:	8c e0       	ldi	r24, 0x0C	; 12
	lcd_command(0x80);
 15e:	b4 df       	rcall	.-152    	; 0xc8 <lcd_command>
 160:	86 e0       	ldi	r24, 0x06	; 6
 162:	b2 df       	rcall	.-156    	; 0xc8 <lcd_command>
 164:	80 e8       	ldi	r24, 0x80	; 128
 166:	b0 cf       	rjmp	.-160    	; 0xc8 <lcd_command>
 168:	08 95       	ret

0000016a <lcd_clear>:
 }

 void lcd_clear(void)
 {
	lcd_writeLine("                ");
 16a:	84 e0       	ldi	r24, 0x04	; 4
 16c:	91 e0       	ldi	r25, 0x01	; 1
 16e:	e2 cf       	rjmp	.-60     	; 0x134 <lcd_writeLine>
 170:	08 95       	ret

00000172 <initBeginState>:
int score = 0;
int numbers[50];
int currentPosition = 0;

void initBeginState(void)
{
 172:	fb df       	rcall	.-10     	; 0x16a <lcd_clear>
 174:	85 e1       	ldi	r24, 0x15	; 21
 176:	91 e0       	ldi	r25, 0x01	; 1
 178:	dd cf       	rjmp	.-70     	; 0x134 <lcd_writeLine>
 17a:	08 95       	ret

0000017c <wait>:
 17c:	18 16       	cp	r1, r24
 17e:	19 06       	cpc	r1, r25
 180:	6c f4       	brge	.+26     	; 0x19c <wait+0x20>
 182:	20 e0       	ldi	r18, 0x00	; 0
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	ef ec       	ldi	r30, 0xCF	; 207
 188:	f7 e0       	ldi	r31, 0x07	; 7
 18a:	31 97       	sbiw	r30, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <wait+0xe>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <wait+0x14>
 190:	00 00       	nop
 192:	2f 5f       	subi	r18, 0xFF	; 255
 194:	3f 4f       	sbci	r19, 0xFF	; 255
 196:	82 17       	cp	r24, r18
 198:	93 07       	cpc	r25, r19
 19a:	a9 f7       	brne	.-22     	; 0x186 <wait+0xa>
 19c:	08 95       	ret

0000019e <checkNumber>:
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
 1a2:	20 91 6a 01 	lds	r18, 0x016A	; 0x80016a <state>
 1a6:	30 91 6b 01 	lds	r19, 0x016B	; 0x80016b <state+0x1>
 1aa:	22 30       	cpi	r18, 0x02	; 2
 1ac:	31 05       	cpc	r19, r1
 1ae:	09 f0       	breq	.+2      	; 0x1b2 <checkNumber+0x14>
 1b0:	51 c0       	rjmp	.+162    	; 0x254 <checkNumber+0xb6>
 1b2:	ec 01       	movw	r28, r24
 1b4:	da df       	rcall	.-76     	; 0x16a <lcd_clear>
 1b6:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <__data_end>
 1ba:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <__data_end+0x1>
 1be:	fc 01       	movw	r30, r24
 1c0:	ee 0f       	add	r30, r30
 1c2:	ff 1f       	adc	r31, r31
 1c4:	e4 59       	subi	r30, 0x94	; 148
 1c6:	fe 4f       	sbci	r31, 0xFE	; 254
 1c8:	20 81       	ld	r18, Z
 1ca:	31 81       	ldd	r19, Z+1	; 0x01
 1cc:	2c 17       	cp	r18, r28
 1ce:	3d 07       	cpc	r19, r29
 1d0:	71 f5       	brne	.+92     	; 0x22e <checkNumber+0x90>
 1d2:	20 91 68 01 	lds	r18, 0x0168	; 0x800168 <score>
 1d6:	30 91 69 01 	lds	r19, 0x0169	; 0x800169 <score+0x1>
 1da:	82 17       	cp	r24, r18
 1dc:	93 07       	cpc	r25, r19
 1de:	d1 f4       	brne	.+52     	; 0x214 <checkNumber+0x76>
 1e0:	86 e2       	ldi	r24, 0x26	; 38
 1e2:	91 e0       	ldi	r25, 0x01	; 1
 1e4:	a7 df       	rcall	.-178    	; 0x134 <lcd_writeLine>
 1e6:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <score>
 1ea:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <score+0x1>
 1ee:	01 96       	adiw	r24, 0x01	; 1
 1f0:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <score+0x1>
 1f4:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <score>
 1f8:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <__data_end+0x1>
 1fc:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <__data_end>
 200:	80 ea       	ldi	r24, 0xA0	; 160
 202:	9f e0       	ldi	r25, 0x0F	; 15
 204:	bb df       	rcall	.-138    	; 0x17c <wait>
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <state+0x1>
 20e:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <state>
 212:	20 c0       	rjmp	.+64     	; 0x254 <checkNumber+0xb6>
 214:	83 e3       	ldi	r24, 0x33	; 51
 216:	91 e0       	ldi	r25, 0x01	; 1
 218:	8d df       	rcall	.-230    	; 0x134 <lcd_writeLine>
 21a:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <__data_end>
 21e:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <__data_end+0x1>
 222:	01 96       	adiw	r24, 0x01	; 1
 224:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <__data_end+0x1>
 228:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <__data_end>
 22c:	13 c0       	rjmp	.+38     	; 0x254 <checkNumber+0xb6>
 22e:	83 e4       	ldi	r24, 0x43	; 67
 230:	91 e0       	ldi	r25, 0x01	; 1
 232:	80 df       	rcall	.-256    	; 0x134 <lcd_writeLine>
 234:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <score+0x1>
 238:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <score>
 23c:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <__data_end+0x1>
 240:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <__data_end>
 244:	80 ea       	ldi	r24, 0xA0	; 160
 246:	9f e0       	ldi	r25, 0x0F	; 15
 248:	99 df       	rcall	.-206    	; 0x17c <wait>
 24a:	93 df       	rcall	.-218    	; 0x172 <initBeginState>
 24c:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <state+0x1>
 250:	10 92 6a 01 	sts	0x016A, r1	; 0x80016a <state>
 254:	df 91       	pop	r29
 256:	cf 91       	pop	r28
 258:	08 95       	ret

0000025a <__vector_8>:
 25a:	1f 92       	push	r1
 25c:	0f 92       	push	r0
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	0f 92       	push	r0
 262:	11 24       	eor	r1, r1
 264:	0b b6       	in	r0, 0x3b	; 59
 266:	0f 92       	push	r0
 268:	2f 93       	push	r18
 26a:	3f 93       	push	r19
 26c:	4f 93       	push	r20
 26e:	5f 93       	push	r21
 270:	6f 93       	push	r22
 272:	7f 93       	push	r23
 274:	8f 93       	push	r24
 276:	9f 93       	push	r25
 278:	af 93       	push	r26
 27a:	bf 93       	push	r27
 27c:	ef 93       	push	r30
 27e:	ff 93       	push	r31
 280:	83 e0       	ldi	r24, 0x03	; 3
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	8c df       	rcall	.-232    	; 0x19e <checkNumber>
 286:	ff 91       	pop	r31
 288:	ef 91       	pop	r30
 28a:	bf 91       	pop	r27
 28c:	af 91       	pop	r26
 28e:	9f 91       	pop	r25
 290:	8f 91       	pop	r24
 292:	7f 91       	pop	r23
 294:	6f 91       	pop	r22
 296:	5f 91       	pop	r21
 298:	4f 91       	pop	r20
 29a:	3f 91       	pop	r19
 29c:	2f 91       	pop	r18
 29e:	0f 90       	pop	r0
 2a0:	0b be       	out	0x3b, r0	; 59
 2a2:	0f 90       	pop	r0
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	0f 90       	pop	r0
 2a8:	1f 90       	pop	r1
 2aa:	18 95       	reti

000002ac <__vector_7>:
 2ac:	1f 92       	push	r1
 2ae:	0f 92       	push	r0
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	0f 92       	push	r0
 2b4:	11 24       	eor	r1, r1
 2b6:	0b b6       	in	r0, 0x3b	; 59
 2b8:	0f 92       	push	r0
 2ba:	2f 93       	push	r18
 2bc:	3f 93       	push	r19
 2be:	4f 93       	push	r20
 2c0:	5f 93       	push	r21
 2c2:	6f 93       	push	r22
 2c4:	7f 93       	push	r23
 2c6:	8f 93       	push	r24
 2c8:	9f 93       	push	r25
 2ca:	af 93       	push	r26
 2cc:	bf 93       	push	r27
 2ce:	ef 93       	push	r30
 2d0:	ff 93       	push	r31
 2d2:	82 e0       	ldi	r24, 0x02	; 2
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	63 df       	rcall	.-314    	; 0x19e <checkNumber>
 2d8:	ff 91       	pop	r31
 2da:	ef 91       	pop	r30
 2dc:	bf 91       	pop	r27
 2de:	af 91       	pop	r26
 2e0:	9f 91       	pop	r25
 2e2:	8f 91       	pop	r24
 2e4:	7f 91       	pop	r23
 2e6:	6f 91       	pop	r22
 2e8:	5f 91       	pop	r21
 2ea:	4f 91       	pop	r20
 2ec:	3f 91       	pop	r19
 2ee:	2f 91       	pop	r18
 2f0:	0f 90       	pop	r0
 2f2:	0b be       	out	0x3b, r0	; 59
 2f4:	0f 90       	pop	r0
 2f6:	0f be       	out	0x3f, r0	; 63
 2f8:	0f 90       	pop	r0
 2fa:	1f 90       	pop	r1
 2fc:	18 95       	reti

000002fe <__vector_6>:
 2fe:	1f 92       	push	r1
 300:	0f 92       	push	r0
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	0f 92       	push	r0
 306:	11 24       	eor	r1, r1
 308:	0b b6       	in	r0, 0x3b	; 59
 30a:	0f 92       	push	r0
 30c:	2f 93       	push	r18
 30e:	3f 93       	push	r19
 310:	4f 93       	push	r20
 312:	5f 93       	push	r21
 314:	6f 93       	push	r22
 316:	7f 93       	push	r23
 318:	8f 93       	push	r24
 31a:	9f 93       	push	r25
 31c:	af 93       	push	r26
 31e:	bf 93       	push	r27
 320:	ef 93       	push	r30
 322:	ff 93       	push	r31
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	3a df       	rcall	.-396    	; 0x19e <checkNumber>
 32a:	ff 91       	pop	r31
 32c:	ef 91       	pop	r30
 32e:	bf 91       	pop	r27
 330:	af 91       	pop	r26
 332:	9f 91       	pop	r25
 334:	8f 91       	pop	r24
 336:	7f 91       	pop	r23
 338:	6f 91       	pop	r22
 33a:	5f 91       	pop	r21
 33c:	4f 91       	pop	r20
 33e:	3f 91       	pop	r19
 340:	2f 91       	pop	r18
 342:	0f 90       	pop	r0
 344:	0b be       	out	0x3b, r0	; 59
 346:	0f 90       	pop	r0
 348:	0f be       	out	0x3f, r0	; 63
 34a:	0f 90       	pop	r0
 34c:	1f 90       	pop	r1
 34e:	18 95       	reti

00000350 <__vector_5>:
 350:	1f 92       	push	r1
 352:	0f 92       	push	r0
 354:	0f b6       	in	r0, 0x3f	; 63
 356:	0f 92       	push	r0
 358:	11 24       	eor	r1, r1
 35a:	0b b6       	in	r0, 0x3b	; 59
 35c:	0f 92       	push	r0
 35e:	2f 93       	push	r18
 360:	3f 93       	push	r19
 362:	4f 93       	push	r20
 364:	5f 93       	push	r21
 366:	6f 93       	push	r22
 368:	7f 93       	push	r23
 36a:	8f 93       	push	r24
 36c:	9f 93       	push	r25
 36e:	af 93       	push	r26
 370:	bf 93       	push	r27
 372:	ef 93       	push	r30
 374:	ff 93       	push	r31
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	11 df       	rcall	.-478    	; 0x19e <checkNumber>
 37c:	ff 91       	pop	r31
 37e:	ef 91       	pop	r30
 380:	bf 91       	pop	r27
 382:	af 91       	pop	r26
 384:	9f 91       	pop	r25
 386:	8f 91       	pop	r24
 388:	7f 91       	pop	r23
 38a:	6f 91       	pop	r22
 38c:	5f 91       	pop	r21
 38e:	4f 91       	pop	r20
 390:	3f 91       	pop	r19
 392:	2f 91       	pop	r18
 394:	0f 90       	pop	r0
 396:	0b be       	out	0x3b, r0	; 59
 398:	0f 90       	pop	r0
 39a:	0f be       	out	0x3f, r0	; 63
 39c:	0f 90       	pop	r0
 39e:	1f 90       	pop	r1
 3a0:	18 95       	reti

000003a2 <beginState>:
 3a2:	49 b3       	in	r20, 0x19	; 25
 3a4:	86 b3       	in	r24, 0x16	; 22
 3a6:	30 b3       	in	r19, 0x10	; 16
 3a8:	20 b1       	in	r18, 0x00	; 0
 3aa:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__TEXT_REGION_LENGTH__+0x7e0063>
 3ae:	84 2b       	or	r24, r20
 3b0:	83 2b       	or	r24, r19
 3b2:	82 2b       	or	r24, r18
 3b4:	89 2b       	or	r24, r25
 3b6:	82 30       	cpi	r24, 0x02	; 2
 3b8:	48 f0       	brcs	.+18     	; 0x3cc <beginState+0x2a>
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <state+0x1>
 3c2:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <state>
 3c6:	8c b5       	in	r24, 0x2c	; 44
 3c8:	9d b5       	in	r25, 0x2d	; 45
 3ca:	c8 c0       	rjmp	.+400    	; 0x55c <srand>
 3cc:	08 95       	ret

000003ce <exItrInit>:
 3ce:	8a b7       	in	r24, 0x3a	; 58
 3d0:	8f ef       	ldi	r24, 0xFF	; 255
 3d2:	8a bf       	out	0x3a, r24	; 58
 3d4:	89 b7       	in	r24, 0x39	; 57
 3d6:	80 6f       	ori	r24, 0xF0	; 240
 3d8:	89 bf       	out	0x39, r24	; 57
 3da:	78 94       	sei
 3dc:	08 95       	ret

000003de <vulEnToonGetallen>:
 3de:	ef 92       	push	r14
 3e0:	ff 92       	push	r15
 3e2:	0f 93       	push	r16
 3e4:	1f 93       	push	r17
 3e6:	cf 93       	push	r28
 3e8:	df 93       	push	r29
 3ea:	88 e4       	ldi	r24, 0x48	; 72
 3ec:	91 e0       	ldi	r25, 0x01	; 1
 3ee:	a2 de       	rcall	.-700    	; 0x134 <lcd_writeLine>
 3f0:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <score>
 3f4:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <score+0x1>
 3f8:	9c 01       	movw	r18, r24
 3fa:	2f 5f       	subi	r18, 0xFF	; 255
 3fc:	3f 4f       	sbci	r19, 0xFF	; 255
 3fe:	12 16       	cp	r1, r18
 400:	13 06       	cpc	r1, r19
 402:	84 f5       	brge	.+96     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 404:	0c e6       	ldi	r16, 0x6C	; 108
 406:	11 e0       	ldi	r17, 0x01	; 1
 408:	c0 e0       	ldi	r28, 0x00	; 0
 40a:	d0 e0       	ldi	r29, 0x00	; 0
 40c:	68 94       	set
 40e:	ee 24       	eor	r14, r14
 410:	e4 f8       	bld	r14, 4
 412:	f1 2c       	mov	r15, r1
 414:	c8 17       	cp	r28, r24
 416:	d9 07       	cpc	r29, r25
 418:	61 f4       	brne	.+24     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 41a:	9d d0       	rcall	.+314    	; 0x556 <rand>
 41c:	83 70       	andi	r24, 0x03	; 3
 41e:	90 78       	andi	r25, 0x80	; 128
 420:	99 23       	and	r25, r25
 422:	24 f4       	brge	.+8      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 424:	01 97       	sbiw	r24, 0x01	; 1
 426:	8c 6f       	ori	r24, 0xFC	; 252
 428:	9f 6f       	ori	r25, 0xFF	; 255
 42a:	01 96       	adiw	r24, 0x01	; 1
 42c:	f8 01       	movw	r30, r16
 42e:	91 83       	std	Z+1, r25	; 0x01
 430:	80 83       	st	Z, r24
 432:	f8 01       	movw	r30, r16
 434:	80 81       	ld	r24, Z
 436:	0e 5f       	subi	r16, 0xFE	; 254
 438:	1f 4f       	sbci	r17, 0xFF	; 255
 43a:	97 01       	movw	r18, r14
 43c:	02 c0       	rjmp	.+4      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 43e:	22 0f       	add	r18, r18
 440:	33 1f       	adc	r19, r19
 442:	8a 95       	dec	r24
 444:	e2 f7       	brpl	.-8      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 446:	23 b9       	out	0x03, r18	; 3
 448:	80 ea       	ldi	r24, 0xA0	; 160
 44a:	9f e0       	ldi	r25, 0x0F	; 15
 44c:	97 de       	rcall	.-722    	; 0x17c <wait>
 44e:	21 96       	adiw	r28, 0x01	; 1
 450:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <score>
 454:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <score+0x1>
 458:	9c 01       	movw	r18, r24
 45a:	2f 5f       	subi	r18, 0xFF	; 255
 45c:	3f 4f       	sbci	r19, 0xFF	; 255
 45e:	c2 17       	cp	r28, r18
 460:	d3 07       	cpc	r29, r19
 462:	c4 f2       	brlt	.-80     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 464:	82 e0       	ldi	r24, 0x02	; 2
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <state+0x1>
 46c:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <state>
 470:	13 b8       	out	0x03, r1	; 3
 472:	7b de       	rcall	.-778    	; 0x16a <lcd_clear>
 474:	89 e5       	ldi	r24, 0x59	; 89
 476:	91 e0       	ldi	r25, 0x01	; 1
 478:	5d de       	rcall	.-838    	; 0x134 <lcd_writeLine>
 47a:	df 91       	pop	r29
 47c:	cf 91       	pop	r28
 47e:	1f 91       	pop	r17
 480:	0f 91       	pop	r16
 482:	ff 90       	pop	r15
 484:	ef 90       	pop	r14
 486:	08 95       	ret

00000488 <main>:
 488:	1a ba       	out	0x1a, r1	; 26
 48a:	17 ba       	out	0x17, r1	; 23
 48c:	cf ef       	ldi	r28, 0xFF	; 255
 48e:	c4 bb       	out	0x14, r28	; 20
 490:	61 de       	rcall	.-830    	; 0x154 <lcd_init>
 492:	11 ba       	out	0x11, r1	; 17
 494:	c2 b9       	out	0x02, r28	; 2
 496:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
 49a:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 49e:	8e b5       	in	r24, 0x2e	; 46
 4a0:	82 60       	ori	r24, 0x02	; 2
 4a2:	8e bd       	out	0x2e, r24	; 46
 4a4:	94 df       	rcall	.-216    	; 0x3ce <exItrInit>
 4a6:	65 de       	rcall	.-822    	; 0x172 <initBeginState>
 4a8:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <state>
 4ac:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <state+0x1>
 4b0:	00 97       	sbiw	r24, 0x00	; 0
 4b2:	19 f0       	breq	.+6      	; 0x4ba <main+0x32>
 4b4:	01 97       	sbiw	r24, 0x01	; 1
 4b6:	19 f0       	breq	.+6      	; 0x4be <main+0x36>
 4b8:	03 c0       	rjmp	.+6      	; 0x4c0 <main+0x38>
 4ba:	73 df       	rcall	.-282    	; 0x3a2 <beginState>
 4bc:	01 c0       	rjmp	.+2      	; 0x4c0 <main+0x38>
 4be:	8f df       	rcall	.-226    	; 0x3de <vulEnToonGetallen>
 4c0:	84 e6       	ldi	r24, 0x64	; 100
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	5b de       	rcall	.-842    	; 0x17c <wait>
 4c6:	f0 cf       	rjmp	.-32     	; 0x4a8 <main+0x20>

000004c8 <do_rand>:
 4c8:	8f 92       	push	r8
 4ca:	9f 92       	push	r9
 4cc:	af 92       	push	r10
 4ce:	bf 92       	push	r11
 4d0:	cf 92       	push	r12
 4d2:	df 92       	push	r13
 4d4:	ef 92       	push	r14
 4d6:	ff 92       	push	r15
 4d8:	cf 93       	push	r28
 4da:	df 93       	push	r29
 4dc:	ec 01       	movw	r28, r24
 4de:	68 81       	ld	r22, Y
 4e0:	79 81       	ldd	r23, Y+1	; 0x01
 4e2:	8a 81       	ldd	r24, Y+2	; 0x02
 4e4:	9b 81       	ldd	r25, Y+3	; 0x03
 4e6:	61 15       	cp	r22, r1
 4e8:	71 05       	cpc	r23, r1
 4ea:	81 05       	cpc	r24, r1
 4ec:	91 05       	cpc	r25, r1
 4ee:	21 f4       	brne	.+8      	; 0x4f8 <do_rand+0x30>
 4f0:	64 e2       	ldi	r22, 0x24	; 36
 4f2:	79 ed       	ldi	r23, 0xD9	; 217
 4f4:	8b e5       	ldi	r24, 0x5B	; 91
 4f6:	97 e0       	ldi	r25, 0x07	; 7
 4f8:	2d e1       	ldi	r18, 0x1D	; 29
 4fa:	33 ef       	ldi	r19, 0xF3	; 243
 4fc:	41 e0       	ldi	r20, 0x01	; 1
 4fe:	50 e0       	ldi	r21, 0x00	; 0
 500:	38 d0       	rcall	.+112    	; 0x572 <__divmodsi4>
 502:	49 01       	movw	r8, r18
 504:	5a 01       	movw	r10, r20
 506:	9b 01       	movw	r18, r22
 508:	ac 01       	movw	r20, r24
 50a:	a7 ea       	ldi	r26, 0xA7	; 167
 50c:	b1 e4       	ldi	r27, 0x41	; 65
 50e:	4d d0       	rcall	.+154    	; 0x5aa <__muluhisi3>
 510:	6b 01       	movw	r12, r22
 512:	7c 01       	movw	r14, r24
 514:	ac ee       	ldi	r26, 0xEC	; 236
 516:	b4 ef       	ldi	r27, 0xF4	; 244
 518:	a5 01       	movw	r20, r10
 51a:	94 01       	movw	r18, r8
 51c:	52 d0       	rcall	.+164    	; 0x5c2 <__mulohisi3>
 51e:	dc 01       	movw	r26, r24
 520:	cb 01       	movw	r24, r22
 522:	8c 0d       	add	r24, r12
 524:	9d 1d       	adc	r25, r13
 526:	ae 1d       	adc	r26, r14
 528:	bf 1d       	adc	r27, r15
 52a:	b7 ff       	sbrs	r27, 7
 52c:	03 c0       	rjmp	.+6      	; 0x534 <do_rand+0x6c>
 52e:	01 97       	sbiw	r24, 0x01	; 1
 530:	a1 09       	sbc	r26, r1
 532:	b0 48       	sbci	r27, 0x80	; 128
 534:	88 83       	st	Y, r24
 536:	99 83       	std	Y+1, r25	; 0x01
 538:	aa 83       	std	Y+2, r26	; 0x02
 53a:	bb 83       	std	Y+3, r27	; 0x03
 53c:	9f 77       	andi	r25, 0x7F	; 127
 53e:	df 91       	pop	r29
 540:	cf 91       	pop	r28
 542:	ff 90       	pop	r15
 544:	ef 90       	pop	r14
 546:	df 90       	pop	r13
 548:	cf 90       	pop	r12
 54a:	bf 90       	pop	r11
 54c:	af 90       	pop	r10
 54e:	9f 90       	pop	r9
 550:	8f 90       	pop	r8
 552:	08 95       	ret

00000554 <rand_r>:
 554:	b9 cf       	rjmp	.-142    	; 0x4c8 <do_rand>

00000556 <rand>:
 556:	80 e0       	ldi	r24, 0x00	; 0
 558:	91 e0       	ldi	r25, 0x01	; 1
 55a:	b6 cf       	rjmp	.-148    	; 0x4c8 <do_rand>

0000055c <srand>:
 55c:	a0 e0       	ldi	r26, 0x00	; 0
 55e:	b0 e0       	ldi	r27, 0x00	; 0
 560:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 564:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 568:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 56c:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 570:	08 95       	ret

00000572 <__divmodsi4>:
 572:	05 2e       	mov	r0, r21
 574:	97 fb       	bst	r25, 7
 576:	16 f4       	brtc	.+4      	; 0x57c <__divmodsi4+0xa>
 578:	00 94       	com	r0
 57a:	0f d0       	rcall	.+30     	; 0x59a <__negsi2>
 57c:	57 fd       	sbrc	r21, 7
 57e:	05 d0       	rcall	.+10     	; 0x58a <__divmodsi4_neg2>
 580:	24 d0       	rcall	.+72     	; 0x5ca <__udivmodsi4>
 582:	07 fc       	sbrc	r0, 7
 584:	02 d0       	rcall	.+4      	; 0x58a <__divmodsi4_neg2>
 586:	46 f4       	brtc	.+16     	; 0x598 <__divmodsi4_exit>
 588:	08 c0       	rjmp	.+16     	; 0x59a <__negsi2>

0000058a <__divmodsi4_neg2>:
 58a:	50 95       	com	r21
 58c:	40 95       	com	r20
 58e:	30 95       	com	r19
 590:	21 95       	neg	r18
 592:	3f 4f       	sbci	r19, 0xFF	; 255
 594:	4f 4f       	sbci	r20, 0xFF	; 255
 596:	5f 4f       	sbci	r21, 0xFF	; 255

00000598 <__divmodsi4_exit>:
 598:	08 95       	ret

0000059a <__negsi2>:
 59a:	90 95       	com	r25
 59c:	80 95       	com	r24
 59e:	70 95       	com	r23
 5a0:	61 95       	neg	r22
 5a2:	7f 4f       	sbci	r23, 0xFF	; 255
 5a4:	8f 4f       	sbci	r24, 0xFF	; 255
 5a6:	9f 4f       	sbci	r25, 0xFF	; 255
 5a8:	08 95       	ret

000005aa <__muluhisi3>:
 5aa:	31 d0       	rcall	.+98     	; 0x60e <__umulhisi3>
 5ac:	a5 9f       	mul	r26, r21
 5ae:	90 0d       	add	r25, r0
 5b0:	b4 9f       	mul	r27, r20
 5b2:	90 0d       	add	r25, r0
 5b4:	a4 9f       	mul	r26, r20
 5b6:	80 0d       	add	r24, r0
 5b8:	91 1d       	adc	r25, r1
 5ba:	11 24       	eor	r1, r1
 5bc:	08 95       	ret

000005be <__mulshisi3>:
 5be:	b7 ff       	sbrs	r27, 7
 5c0:	f4 cf       	rjmp	.-24     	; 0x5aa <__muluhisi3>

000005c2 <__mulohisi3>:
 5c2:	f3 df       	rcall	.-26     	; 0x5aa <__muluhisi3>
 5c4:	82 1b       	sub	r24, r18
 5c6:	93 0b       	sbc	r25, r19
 5c8:	08 95       	ret

000005ca <__udivmodsi4>:
 5ca:	a1 e2       	ldi	r26, 0x21	; 33
 5cc:	1a 2e       	mov	r1, r26
 5ce:	aa 1b       	sub	r26, r26
 5d0:	bb 1b       	sub	r27, r27
 5d2:	fd 01       	movw	r30, r26
 5d4:	0d c0       	rjmp	.+26     	; 0x5f0 <__udivmodsi4_ep>

000005d6 <__udivmodsi4_loop>:
 5d6:	aa 1f       	adc	r26, r26
 5d8:	bb 1f       	adc	r27, r27
 5da:	ee 1f       	adc	r30, r30
 5dc:	ff 1f       	adc	r31, r31
 5de:	a2 17       	cp	r26, r18
 5e0:	b3 07       	cpc	r27, r19
 5e2:	e4 07       	cpc	r30, r20
 5e4:	f5 07       	cpc	r31, r21
 5e6:	20 f0       	brcs	.+8      	; 0x5f0 <__udivmodsi4_ep>
 5e8:	a2 1b       	sub	r26, r18
 5ea:	b3 0b       	sbc	r27, r19
 5ec:	e4 0b       	sbc	r30, r20
 5ee:	f5 0b       	sbc	r31, r21

000005f0 <__udivmodsi4_ep>:
 5f0:	66 1f       	adc	r22, r22
 5f2:	77 1f       	adc	r23, r23
 5f4:	88 1f       	adc	r24, r24
 5f6:	99 1f       	adc	r25, r25
 5f8:	1a 94       	dec	r1
 5fa:	69 f7       	brne	.-38     	; 0x5d6 <__udivmodsi4_loop>
 5fc:	60 95       	com	r22
 5fe:	70 95       	com	r23
 600:	80 95       	com	r24
 602:	90 95       	com	r25
 604:	9b 01       	movw	r18, r22
 606:	ac 01       	movw	r20, r24
 608:	bd 01       	movw	r22, r26
 60a:	cf 01       	movw	r24, r30
 60c:	08 95       	ret

0000060e <__umulhisi3>:
 60e:	a2 9f       	mul	r26, r18
 610:	b0 01       	movw	r22, r0
 612:	b3 9f       	mul	r27, r19
 614:	c0 01       	movw	r24, r0
 616:	a3 9f       	mul	r26, r19
 618:	70 0d       	add	r23, r0
 61a:	81 1d       	adc	r24, r1
 61c:	11 24       	eor	r1, r1
 61e:	91 1d       	adc	r25, r1
 620:	b2 9f       	mul	r27, r18
 622:	70 0d       	add	r23, r0
 624:	81 1d       	adc	r24, r1
 626:	11 24       	eor	r1, r1
 628:	91 1d       	adc	r25, r1
 62a:	08 95       	ret

0000062c <_exit>:
 62c:	f8 94       	cli

0000062e <__stop_program>:
 62e:	ff cf       	rjmp	.-2      	; 0x62e <__stop_program>
